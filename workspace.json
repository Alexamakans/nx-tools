{
  "version": 1,
  "projects": {
    "nx-docker": {
      "root": "libs/nx-docker",
      "sourceRoot": "libs/nx-docker/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/nx-docker/.eslintrc",
            "tsConfig": ["libs/nx-docker/tsconfig.lib.json", "libs/nx-docker/tsconfig.spec.json"],
            "exclude": ["**/node_modules/**", "!libs/nx-docker/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nx-docker/jest.config.js",
            "tsConfig": "libs/nx-docker/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/nx-docker",
            "tsConfig": "libs/nx-docker/tsconfig.lib.json",
            "packageJson": "libs/nx-docker/package.json",
            "main": "libs/nx-docker/src/index.ts",
            "assets": [
              "libs/nx-docker/*.md",
              {
                "input": "./libs/nx-docker/src",
                "glob": "**/*.!(ts)",
                "output": "./src"
              },
              {
                "input": "./libs/nx-docker",
                "glob": "collection.json",
                "output": "."
              },
              {
                "input": "./libs/nx-docker",
                "glob": "builders.json",
                "output": "."
              }
            ]
          }
        }
      }
    },
    "nx-docker-e2e": {
      "projectType": "application",
      "root": "apps/nx-docker-e2e",
      "sourceRoot": "apps/nx-docker-e2e/src",
      "architect": {
        "e2e": {
          "builder": "@nrwl/nx-plugin:e2e",
          "options": {
            "target": "nx-docker:build",
            "npmPackageName": "@gperdomor/nx-docker",
            "pluginOutputPath": "dist/libs/nx-docker",
            "jestConfig": "apps/nx-docker-e2e/jest.config.js",
            "tsSpecConfig": "apps/nx-docker-e2e/tsconfig.spec.json"
          }
        }
      }
    },
    "examples-docker": {
      "root": "apps/examples/docker",
      "sourceRoot": "apps/examples/docker/src",
      "projectType": "application",
      "prefix": "examples-docker",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/examples/docker",
            "main": "apps/examples/docker/src/main.ts",
            "tsConfig": "apps/examples/docker/tsconfig.app.json",
            "assets": ["apps/examples/docker/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/examples/docker/src/environments/environment.ts",
                  "with": "apps/examples/docker/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "examples-docker:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/examples/docker/.eslintrc",
            "tsConfig": [
              "apps/examples/docker/tsconfig.app.json",
              "apps/examples/docker/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/examples/docker/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/example-app/jest.config.js",
            "tsConfig": "apps/example-app/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "docker": {
          "builder": "./dist/libs/nx-docker:build",
          "options": {
            "repository": "$CI_PROJECT_PATH/examples-docker",
            "cache_froms": "$CI_PROJECT_PATH/examples-docker:latest",
            "dockerfile": "apps/examples/docker/Dockerfile",
            "registry": "$CI_REGISTRY",
            "username": "$CI_REGISTRY_USER",
            "password": "$CI_REGISTRY_PASSWORD",
            "tag_with_ref": false,
            "tag_with_sha": false,
            "tags": "latest",
            "push": false,
            "socket": "/var/run/docker.sock"
          }
        }
      }
    },
    "nx-prisma": {
      "root": "libs/nx-prisma",
      "sourceRoot": "libs/nx-prisma/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/nx-prisma/.eslintrc",
            "tsConfig": ["libs/nx-prisma/tsconfig.lib.json", "libs/nx-prisma/tsconfig.spec.json"],
            "exclude": ["**/node_modules/**", "!libs/nx-prisma/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/nx-prisma/jest.config.js",
            "tsConfig": "libs/nx-prisma/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "build": {
          "builder": "@nrwl/node:package",
          "options": {
            "outputPath": "dist/libs/nx-prisma",
            "tsConfig": "libs/nx-prisma/tsconfig.lib.json",
            "packageJson": "libs/nx-prisma/package.json",
            "main": "libs/nx-prisma/src/index.ts",
            "assets": [
              "libs/nx-prisma/*.md",
              {
                "input": "libs/nx-prisma/src",
                "glob": "**/*.!(ts)",
                "output": "./src"
              },
              {
                "input": "libs/nx-prisma",
                "glob": "collection.json",
                "output": "."
              },
              {
                "input": "libs/nx-prisma",
                "glob": "builders.json",
                "output": "."
              }
            ]
          }
        }
      }
    },
    "examples-prisma": {
      "root": "apps/examples/prisma",
      "sourceRoot": "apps/examples/prisma/src",
      "projectType": "application",
      "prefix": "examples-prisma",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/examples/prisma",
            "main": "apps/examples/prisma/src/main.ts",
            "tsConfig": "apps/examples/prisma/tsconfig.app.json",
            "assets": ["apps/examples/prisma/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/examples/prisma/src/environments/environment.ts",
                  "with": "apps/examples/prisma/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "examples-prisma:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/examples/prisma/.eslintrc",
            "tsConfig": [
              "apps/examples/prisma/tsconfig.app.json",
              "apps/examples/prisma/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/examples/prisma/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/examples/prisma/jest.config.js",
            "tsConfig": "apps/examples/prisma/tsconfig.spec.json",
            "passWithNoTests": true
          }
        },
        "generate": {
          "builder": "./dist/libs/nx-prisma:generate",
          "options": {
            "schema": "apps/examples/prisma/data/schema.prisma"
          }
        },
        "migrations": {
          "builder": "./dist/libs/nx-prisma:migrations",
          "options": {
            "schema": "apps/examples/prisma/data/schema.prisma"
          }
        },
        "rollback": {
          "builder": "./dist/libs/nx-prisma:rollback",
          "options": {
            "schema": "apps/examples/prisma/data/schema.prisma"
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/node"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nx-plugin": {
      "plugin": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "example-app"
}
