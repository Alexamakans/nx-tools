include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'
  - .gitlab/node-12.yml
  - .gitlab/node-14.yml
  - .gitlab/node-15.yml
  - .gitlab/node-16.yml

stages:
  - setup
  - test
  - build

variables:
  NX_BRANCH: $CI_COMMIT_BRANCH
  NX_RUN_GROUP: $CI_PIPELINE_ID
  NX_CLOUD_ACCESS_TOKEN: $NX_CLOUD_AUTH_TOKEN
  NX_CLOUD_DISTRIBUTED_EXECUTION: 'true'
  PRISMA_HIDE_UPDATE_MESSAGE: 'true'

.node-job:
  image: node:16.3.0
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
    policy: pull
  before_script:
    - npm ci --cache .npm --prefer-offline --ignore-scripts

.require-setup:
  needs:
    - job: setup
      optional: true

.docker-build:
  extends: [.node-job, .require-setup]
  stage: build
  image: ghcr.io/gperdomor/nx-docker:16.3-alpine
  services:
    - docker:20.10.7-dind
  script:
    - echo $GH_PAT | docker login ghcr.io --username gperdomor --password-stdin
    - echo $DH_PAT | docker login --username gperdomor --password-stdin
    - docker buildx create --use
    - node ./tools/build.js

setup:
  stage: setup
  extends: [.node-job]
  cache:
    key: !reference [.node-job, cache, key]
    paths: !reference [.node-job, cache, paths]
    policy: pull-push
  script:
    - echo "Done!..."
  rules:
    - changes:
        - package-lock.json

agent:
  stage: test
  extends: [.node-job, .require-setup]
  parallel: 2
  image: ghcr.io/gperdomor/nx-docker:16.3-alpine
  services:
    - docker:20.10.7-dind
  script:
    - echo "Start Nx Agent $CI_NODE_INDEX of $CI_NODE_TOTAL"
    - npx @nrwl/nx-cloud start-agent

main:
  extends: [.node-job, .require-setup]
  stage: test
  variables:
    GIT_DEPTH: 0
  script:
    - pids=()
    - eval "npx nx affected:build --base=$NX_BASE --parallel --max-parallel=3 --with-deps" & pids+=($!)
    - eval "npx nx affected:lint  --base=$NX_BASE --parallel --max-parallel=3" & pids+=($!)
    - eval "npx nx affected:test  --base=$NX_BASE --parallel --max-parallel=2" & pids+=($!)
    - eval "npx nx affected:e2e   --base=$NX_BASE --parallel --max-parallel=2" & pids+=($!)
    - |
      for pid in ${pids[*]}; do
        if ! wait $pid; then
          exit 1
        fi
      done
    - exit 0
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  after_script:
    - npx @nrwl/nx-cloud stop-all-agents
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        NX_BASE: HEAD~1
      when: delayed
      start_in: 20 seconds

mr:
  extends: [main]
  rules:
    - if: $CI_MERGE_REQUEST_IID
      variables:
        NX_BASE: remotes/origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
      when: delayed
      start_in: 20 seconds
